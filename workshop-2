Her kategorideki (CategoryID) ürün sayısını gösteren bir sorgu:

SELECT CategoryID, COUNT(*) AS ProductCount
FROM Products
GROUP BY CategoryID;

Birim fiyatı en yüksek 5 ürünü listeleyin:

SELECT TOP 5 ProductID, ProductName, UnitPrice
FROM Products
ORDER BY UnitPrice DESC;

Her tedarikçinin sattığı ürünlerin ortalama fiyatını listeleyin:

SELECT SupplierID, AVG(UnitPrice) AS AveragePrice
FROM Products
GROUP BY SupplierID;

"Products" tablosunda birim fiyatı 100'den büyük olan ürünlerin kategorilerini ve bu kategorilerdeki ortalama fiyatı listeleyin:

SELECT CategoryID, AVG(UnitPrice) AS AveragePrice
FROM Products
WHERE UnitPrice > 100
GROUP BY CategoryID;

"OrderDetails" tablosunda birim fiyat ve miktar çarpımıyla toplam satış değeri 1000'den fazla olan siparişleri listeleyin:

SELECT OrderID, ProductID, UnitPrice, Quantity, (UnitPrice * Quantity) AS TotalValue
FROM OrderDetails
HAVING (UnitPrice * Quantity) > 1000;

En son sevk edilen 10 siparişi listeleyin:

SELECT TOP 10 OrderID, CustomerID, OrderDate, ShippedDate
FROM Orders
ORDER BY ShippedDate DESC;

"Products" tablosundaki ürünlerin ortalama fiyatını hesaplayın:

SELECT AVG(UnitPrice) AS AveragePrice
FROM Products;
"Products" tablosunda fiyatı 50’den büyük olan ürünlerin toplam stok miktarını hesaplayın:

SELECT SUM(UnitsInStock) AS TotalStock
FROM Products
WHERE UnitPrice > 50;

"Orders" tablosundaki en eski sipariş tarihini bulun:

SELECT MIN(OrderDate) AS OldestOrderDate
FROM Orders;

"Employees" tablosundaki çalışanların kaç yıl önce işe başladıklarını gösteren bir sorgu yazın:

SELECT EmployeeID, FirstName, LastName, HireDate, DATEDIFF(YEAR, HireDate, GETDATE()) AS YearsWorked
FROM Employees;

"OrderDetails" tablosundaki her bir sipariş için, birim fiyatın toplamını yuvarlayarak (ROUND) hesaplayın:

SELECT OrderID, ROUND(SUM(UnitPrice), 0) AS TotalUnitPrice
FROM OrderDetails
GROUP BY OrderID;

"Products" tablosunda stoktaki (UnitsInStock) ürün sayısını gösteren bir COUNT sorgusu yazın:

SELECT COUNT(*) AS ProductsInStock
FROM Products
WHERE UnitsInStock > 0;

"Products" tablosundaki en düşük ve en yüksek fiyatları hesaplayın:

SELECT MIN(UnitPrice) AS MinPrice, MAX(UnitPrice) AS MaxPrice
FROM Products;

"Orders" tablosunda her yıl kaç sipariş alındığını listeleyin (YEAR() fonksiyonunu kullanarak):

SELECT YEAR(OrderDate) AS OrderYear, COUNT(*) AS OrderCount
FROM Orders
GROUP BY YEAR(OrderDate);

"Employees" tablosundaki çalışanların tam adını (FirstName + LastName) birleştirerek gösterin:

SELECT EmployeeID, (FirstName + ' ' + LastName) AS FullName
FROM Employees;

"Customers" tablosundaki şehir adlarının uzunluğunu (LENGTH) hesaplayın:

SELECT CustomerID, City, LEN(City) AS CityNameLength
FROM Customers;

"Products" tablosundaki her ürünün fiyatını iki ondalık basamağa yuvarlayarak gösterin:

SELECT ProductID, ProductName, ROUND(UnitPrice, 2) AS RoundedPrice
FROM Products;
"Orders" tablosundaki tüm siparişlerin toplam sayısını bulun:

SELECT COUNT(*) AS TotalOrders
FROM Orders;

"Products" tablosunda her kategorideki (CategoryID) ürünlerin ortalama fiyatını (AVG) hesaplayın:

SELECT CategoryID, AVG(UnitPrice) AS AveragePrice
FROM Products
GROUP BY CategoryID;

"Orders" tablosunda sevk tarihi (ShippedDate) boş olan siparişlerin yüzdesini (COUNT ve toplam sipariş sayısını kullanarak) hesaplayın:

SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Orders)) AS PercentageNotShipped
FROM Orders
WHERE ShippedDate IS NULL;

"Products" tablosundaki en pahalı ürünün fiyatını bulun ve bir fonksiyon kullanarak fiyatı %10 artırın:

SELECT ProductID, ProductName, UnitPrice, UnitPrice * 1.10 AS IncreasedPrice
FROM Products
WHERE UnitPrice = (SELECT MAX(UnitPrice) FROM Products);

"Products" tablosundaki ürün adlarının ilk 3 karakterini gösterin (SUBSTRING):

SELECT ProductID, ProductName, SUBSTRING(ProductName, 1, 3) AS FirstThreeChars
FROM Products;

"Orders" tablosunda verilen siparişlerin yıl ve ay bazında kaç sipariş alındığını hesaplayın (YEAR ve MONTH fonksiyonları):

SELECT YEAR(OrderDate) AS OrderYear, MONTH(OrderDate) AS OrderMonth, COUNT(*) AS OrderCount
FROM Orders
GROUP BY YEAR(OrderDate), MONTH(OrderDate);

"OrderDetails" tablosunda toplam sipariş değerini (UnitPrice * Quantity) hesaplayıp, bu değeri iki ondalık basamağa yuvarlayarak gösterin:

SELECT OrderID, ProductID, ROUND(SUM(UnitPrice * Quantity), 2) AS TotalOrderValue
FROM OrderDetails
GROUP BY OrderID, ProductID;

"Products" tablosunda stokta olmayan (UnitsInStock = 0) ürünlerin fiyatlarını toplam fiyat olarak hesaplayın:

SELECT SUM(UnitPrice) AS TotalPriceOutOfStock
FROM Products
WHERE UnitsInStock = 0;
